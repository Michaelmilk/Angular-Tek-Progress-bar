{"version":3,"sources":["progressBarModule.js"],"names":["angular","module","run","$templateCache","put","directive","scope","control","containerClass","value","restrict","transclude","controllerAs","templateUrl","bindToController","controller","$q","$scope","$element","ProgressObj","element","divElements","find","this","containerElement","barContainer","bar","settings","fullClass","emptyClass","prototype","get","set","val","css","updateClasses","removeClass","addClass","setAnimation","init","progressObj","facade","newVal","_getDefer","resolve","$on","_updateDefer","$watch","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","factory","defaultSettings","deferred","defer","instance","lastVal","animation","requiredClear","intervalCont","incrementStrategy","stat","rnd","Math","random","round","interval","increment","obj","setInterval","self","clearInterval","isInProgress","promise","then","data","clear","Error","increase","start","stop","done","reset","animationVal","isAnimated"],"mappings":"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","file":"progressBarModule.min.js","sourcesContent":["(function () {\r\n    \"use strict\";\r\n    angular.module('Tek.progressBar', []).run(['$templateCache', function ($templateCache) {\r\n        $templateCache.put('Tek.progressBarDirective.html', \"<div class='progress'><div class='progress-bar' ng-transclude></div></div>\");\r\n    }]);\r\n}());\n(function () {\r\n    \"use strict\";\r\n    angular.module('Tek.progressBar').directive('progressBar', function () {\r\n        return {\r\n            scope: {\r\n                control: \"=\",\r\n                containerClass: \"@class\",\r\n                //barClass: \"@\",\r\n                //successClass: \"@\",\r\n                value: \"=\"\r\n            },\r\n            restrict: \"E\",\r\n            transclude: true,\r\n            controllerAs: \"bar\",\r\n            templateUrl: \"Tek.progressBarDirective.html\",\r\n            bindToController: true,\r\n            controller: ['$q', '$scope', '$element', function ($q, $scope, $element) {\r\n                var bar = this;\r\n\r\n\r\n                var settings = {\r\n                    fullClass: 'full-bar',\r\n                    emptyClass: 'empty-bar'\r\n                };\r\n\r\n                function ProgressObj(element) {\r\n                    var divElements = element.find('div');\r\n                    this.containerElement = angular.element(divElements[0]);\r\n                    this.barContainer = angular.element(divElements[1]);\r\n                    this.value = 0;\r\n                }\r\n\r\n                ProgressObj.prototype.get = function () {\r\n                  return this.value;\r\n                };\r\n\r\n                ProgressObj.prototype.set = function (val) {\r\n                    this.value = val;\r\n                    this.barContainer.css('width', val + '%');\r\n                    this.updateClasses();\r\n                };\r\n\r\n                ProgressObj.prototype.updateClasses = function () {\r\n                    if(this.value === 0){\r\n                        this.containerElement.removeClass(settings.fullClass);\r\n                        return this.containerElement.addClass(settings.emptyClass);\r\n                    }\r\n\r\n                    if(this.value === 100){\r\n                        this.containerElement.removeClass(settings.emptyClass);\r\n                        return this.containerElement.addClass(settings.fullClass);\r\n                    }\r\n\r\n                    this.containerElement.removeClass(settings.fullClass);\r\n                    this.containerElement.removeClass(settings.emptyClass);\r\n                };\r\n\r\n                ProgressObj.prototype.setAnimation = function (val) {\r\n                    (val) ? this.barContainer.css('transition', '') : this.barContainer.css('transition', 'none');\r\n                };\r\n\r\n                bar.init = function () {\r\n                    bar.progressObj = new ProgressObj($element);\r\n\r\n                    var facade  = {\r\n                        get: function () {\r\n                            return bar.progressObj.get();\r\n                        },\r\n                        set: function (newVal) {\r\n                            bar.progressObj.set(newVal);\r\n                        },\r\n                        setAnimation: function (val) {\r\n                            bar.progressObj.setAnimation(val);\r\n                        }\r\n                    };\r\n\r\n                    if (bar.control) {\r\n                        bar.control._getDefer().resolve(facade);\r\n\r\n                        $scope.$on('$destroy', function () {\r\n                            bar.control._updateDefer();\r\n                        });\r\n                    }else{\r\n                        $scope.$watch('bar.value', function (newVal) {\r\n                            bar.progressObj.set(newVal);\r\n                        });\r\n                    }\r\n                };\r\n                bar.init();\r\n            }]\r\n        }\r\n    });\r\n}());\n(function () {\r\n    \"use strict\";\r\n    var requestAnimationFrame = (function () {\r\n        return window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            function (callback) {\r\n                window.setTimeout(callback, 1000 / 60);\r\n            };\r\n    })();\r\n\r\n    angular.module('Tek.progressBar').factory('progressBarParams', ['$q', function ($q) {\r\n        return function (defaultSettings) {\r\n            var deferred = $q.defer();\r\n            var instance = null;\r\n            var lastVal = 0;\r\n            var animation = true;\r\n            var requiredClear = false;\r\n\r\n            var intervalCont = (function () {\r\n                var incrementStrategy = function (stat) {\r\n                    var rnd;\r\n                    if (stat >= 0 && stat < 25) {\r\n                        // Start out between 3 - 6% increments\r\n                        rnd = (Math.random() * (5 - 3 + 1) + 3);\r\n                    } else if (stat >= 25 && stat < 65) {\r\n                        // increment between 0 - 3%\r\n                        rnd = (Math.random() * 3);\r\n                    } else if (stat >= 65 && stat < 90) {\r\n                        // increment between 0 - 2%\r\n                        rnd = (Math.random() * 2);\r\n                    } else if (stat >= 90 && stat < 99) {\r\n                        // finally, increment it .5 %\r\n                        rnd = 0.5;\r\n                    } else {\r\n                        // after 99%, don't increment:\r\n                        rnd = 0;\r\n                    }\r\n                    return Math.round((stat + rnd) * 100) / 100;\r\n                };\r\n\r\n                var interval = null;\r\n                return {\r\n                    increment: function () {\r\n                        obj.set(incrementStrategy(lastVal));\r\n                    },\r\n                    setInterval: function () {\r\n                        var self = this;\r\n                        if (!interval) {\r\n                            interval = setInterval(function () {\r\n                                self.increment();\r\n                            }, 300);\r\n                        }\r\n                    },\r\n                    clearInterval: function () {\r\n                        clearInterval(interval);\r\n                        interval = null;\r\n                    },\r\n                    isInProgress: function () {\r\n                        return !!interval;\r\n                    }\r\n                };\r\n            }());\r\n\r\n            var obj = {\r\n                _getDefer: function () {\r\n                    return deferred;\r\n                },\r\n                _updateDefer: function () {\r\n                    deferred = $q.defer();\r\n                    instance = null;\r\n                    deferred.promise.then(function (data) {\r\n                        instance = data;\r\n                        instance.set(lastVal);\r\n                    });\r\n                },\r\n                set: function (val) {\r\n                    //todo rewrite\r\n                    if (requiredClear) {\r\n                        requiredClear = false;\r\n                        this.clear();\r\n                    }\r\n\r\n                    //Checking value is number and not NaN\r\n                    if (typeof val !== 'number' || val !== val) {\r\n                        throw new Error(\"Wrong value\");\r\n                    }\r\n                    if (val < 0) {\r\n                        val = 0;\r\n                    }\r\n                    if (val > 100) {\r\n                        val = 100;\r\n                    }\r\n                    lastVal = val;\r\n                    if (instance) {\r\n                        instance.set(lastVal);\r\n                    }\r\n                    return this;\r\n                },\r\n                get: function () {\r\n                    return lastVal;\r\n                },\r\n                isInProgress: function () {\r\n                    return intervalCont.isInProgress();\r\n                },\r\n                increase: function (value) {\r\n                    (value)? this.set(lastVal + value) : intervalCont.increment();\r\n                    return this;\r\n                },\r\n                start: function () {\r\n                    intervalCont.setInterval();\r\n                    return this;\r\n                },\r\n                stop: function () {\r\n                    intervalCont.clearInterval();\r\n                    return this;\r\n                },\r\n                done: function () {\r\n                    this.stop();\r\n                    this.set(100);\r\n                    requiredClear = true;\r\n                    return this;\r\n                },\r\n                reset: function () {\r\n                    this.stop();\r\n                    this.set(0);\r\n                    return this;\r\n                },\r\n                clear: function () {\r\n                    var self = this;\r\n                    var animationVal = this.isAnimated();\r\n                    this.stop();\r\n                    this.setAnimation(false);\r\n                    this.reset();\r\n                    requestAnimationFrame(function () {\r\n                        self.setAnimation(animationVal);\r\n                    });\r\n                    return this;\r\n                },\r\n                setAnimation: function (val) {\r\n                    animation = !!val;\r\n                    deferred.promise.then(function (data) {\r\n                        data.setAnimation(animation);\r\n                    });\r\n                    return this;\r\n                },\r\n                isAnimated: function () {\r\n                    return animation;\r\n                }\r\n            };\r\n\r\n            obj._updateDefer(0);\r\n\r\n            return obj;\r\n        }\r\n    }]);\r\n}());"],"sourceRoot":"/source/"}